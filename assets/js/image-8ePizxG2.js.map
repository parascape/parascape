{"version":3,"file":"image-8ePizxG2.js","sources":["../../../src/components/ui/image.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { cn } from '@/lib/utils';\nimport { Loading } from './loading';\n\ninterface ImageProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  src: string;\n  alt: string;\n  className?: string;\n  loadingClassName?: string;\n  aspectRatio?: 'square' | '16:9' | '4:3' | 'auto';\n  objectFit?: 'contain' | 'cover';\n}\n\nconst aspectRatioClasses = {\n  square: 'aspect-square',\n  '16:9': 'aspect-video',\n  '4:3': 'aspect-4/3',\n  auto: ''\n};\n\nexport function Image({\n  src,\n  alt,\n  className,\n  loadingClassName,\n  aspectRatio = 'auto',\n  objectFit = 'cover',\n  ...props\n}: ImageProps) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [imageSrc, setImageSrc] = useState<string | null>(null);\n\n  useEffect(() => {\n    const img = new window.Image();\n    \n    img.onload = () => {\n      setImageSrc(src);\n      setIsLoading(false);\n      setError(null);\n    };\n\n    img.onerror = () => {\n      setError('Failed to load image');\n      setIsLoading(false);\n    };\n\n    img.src = src;\n\n    return () => {\n      img.onload = null;\n      img.onerror = null;\n    };\n  }, [src]);\n\n  const containerClasses = cn(\n    'relative overflow-hidden bg-gray-100 rounded-md',\n    aspectRatioClasses[aspectRatio],\n    className\n  );\n\n  if (error) {\n    return (\n      <div className={containerClasses}>\n        <div className=\"absolute inset-0 flex items-center justify-center text-gray-400 text-sm\">\n          {error}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={containerClasses}>\n      {isLoading && (\n        <div className={cn('absolute inset-0', loadingClassName)}>\n          <Loading variant=\"pulse\" className=\"h-full\" />\n        </div>\n      )}\n      {imageSrc && (\n        <img\n          src={imageSrc}\n          alt={alt}\n          className={cn(\n            'transition-opacity duration-300',\n            isLoading ? 'opacity-0' : 'opacity-100',\n            objectFit === 'contain' ? 'object-contain' : 'object-cover',\n            'w-full h-full'\n          )}\n          {...props}\n        />\n      )}\n    </div>\n  );\n} "],"names":["aspectRatioClasses","square","auto","Image","src","alt","className","loadingClassName","aspectRatio","objectFit","props","isLoading","setIsLoading","useState","error","setError","imageSrc","setImageSrc","useEffect","img","window","onload","onerror","containerClasses","cn","jsxDEV","children","fileName","lineNumber","columnNumber","this","Loading","variant","jsxDevRuntimeExports"],"mappings":"+FAaA,MAAMA,EAAqB,CACzBC,OAAQ,gBACR,OAAQ,eACR,MAAO,aACPC,KAAM,IAGD,SAASC,GAAMC,IACpBA,EAAAC,IACAA,EAAAC,UACAA,EAAAC,iBACAA,EAAAC,YACAA,EAAc,OAAAC,UACdA,EAAY,WACTC,IAEH,MAAOC,EAAWC,GAAgBC,EAAAA,UAAS,IACpCC,EAAOC,GAAYF,EAAAA,SAAwB,OAC3CG,EAAUC,GAAeJ,EAAAA,SAAwB,MAExDK,EAAAA,WAAU,KACF,MAAAC,EAAM,IAAIC,OAAOjB,MAevB,OAbAgB,EAAIE,OAAS,KACXJ,EAAYb,GACZQ,GAAa,GACbG,EAAS,KAAI,EAGfI,EAAIG,QAAU,KACZP,EAAS,wBACTH,GAAa,EAAK,EAGpBO,EAAIf,IAAMA,EAEH,KACLe,EAAIE,OAAS,KACbF,EAAIG,QAAU,IAAA,CAChB,GACC,CAAClB,IAEJ,MAAMmB,EAAmBC,EACvB,kDACAxB,EAAmBQ,GACnBF,GAGF,OAAIQ,IAEAW,OAAC,OAAInB,UAAWiB,EACdG,kBAAC,MAAI,CAAApB,UAAU,0EACZoB,SADHZ,QAAA,GAAA,EAAA,CAAAa,SAAA,2DAAAC,WAAA,GAAAC,aAAA,GAAAC,YADF,GAAA,EAAA,CAAAH,SAAA,2DAAAC,WAAA,GAAAC,aAAA,GAIAC,QAKFL,OAAC,MAAI,CAAAnB,UAAWiB,EACbG,SAAA,CAAAf,KACEc,OAAA,MAAA,CAAInB,UAAWkB,EAAG,mBAAoBjB,GACrCmB,SAAAD,EAAAA,OAACM,EAAQ,CAAAC,QAAQ,QAAQ1B,UAAU,eAAnC,GAAA,EAAA,CAAAqB,SAAA,2DAAAC,WAAA,GAAAC,aAAA,IAAAC,YADF,GAAA,EAAA,CAAAH,SAAA,2DAAAC,WAAA,GAAAC,aAAA,GAEAC,MAEDd,GACCiB,EAAAR,OAAC,MAAA,CACCrB,IAAKY,EACLX,MACAC,UAAWkB,EACT,kCACAb,EAAY,YAAc,cACZ,YAAdF,EAA0B,iBAAmB,eAC7C,oBAEEC,QATN,GAAA,EAAA,CAAAiB,SAAA,2DAAAC,WAAA,GAAAC,aAAA,GAAAC,aAPJ,GAAA,EAAA,CAAAH,SAAA,2DAAAC,WAAA,GAAAC,aAAA,GAmBAC,KAEJ"}