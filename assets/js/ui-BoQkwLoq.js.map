{"version":3,"file":"ui-BoQkwLoq.js","sources":["../../../node_modules/lucide-react/dist/esm/shared/src/utils.js","../../../node_modules/lucide-react/dist/esm/defaultAttributes.js","../../../node_modules/lucide-react/dist/esm/Icon.js","../../../node_modules/lucide-react/dist/esm/createLucideIcon.js","../../../node_modules/lucide-react/dist/esm/icons/arrow-right.js","../../../node_modules/lucide-react/dist/esm/icons/chart-line.js","../../../node_modules/lucide-react/dist/esm/icons/circle-check-big.js","../../../node_modules/lucide-react/dist/esm/icons/code.js","../../../node_modules/lucide-react/dist/esm/icons/linkedin.js","../../../node_modules/lucide-react/dist/esm/icons/loader-circle.js","../../../node_modules/lucide-react/dist/esm/icons/mail.js","../../../node_modules/lucide-react/dist/esm/icons/megaphone.js","../../../node_modules/lucide-react/dist/esm/icons/menu.js","../../../node_modules/lucide-react/dist/esm/icons/message-square.js","../../../node_modules/lucide-react/dist/esm/icons/palette.js","../../../node_modules/lucide-react/dist/esm/icons/phone.js","../../../node_modules/lucide-react/dist/esm/icons/twitter.js","../../../node_modules/lucide-react/dist/esm/icons/video.js","../../../node_modules/lucide-react/dist/esm/icons/x.js","../../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../../node_modules/react/jsx-runtime.js","../../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../../node_modules/motion-utils/dist/es/noop.mjs","../../../node_modules/motion-utils/dist/es/errors.mjs","../../../node_modules/motion-utils/dist/es/memo.mjs","../../../node_modules/motion-utils/dist/es/progress.mjs","../../../node_modules/motion-utils/dist/es/time-conversion.mjs","../../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../../node_modules/framer-motion/dist/es/motion/index.mjs","../../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../../../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../../../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../../../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../../../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../../../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../../../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../../../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../../../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../../../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../../../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../../../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../../../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../../../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../../../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../../../node_modules/motion-dom/dist/es/gestures/hover.mjs","../../../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../../../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../../../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../../../node_modules/framer-motion/dist/es/utils/array.mjs","../../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../../node_modules/framer-motion/dist/es/value/index.mjs","../../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../../node_modules/framer-motion/dist/es/easing/back.mjs","../../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../../node_modules/framer-motion/dist/es/render/store.mjs","../../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst mergeClasses = (...classes) => classes.filter((className, index, array) => {\n  return Boolean(className) && className.trim() !== \"\" && array.indexOf(className) === index;\n}).join(\" \").trim();\n\nexport { mergeClasses, toKebabCase };\n//# sourceMappingURL=utils.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\nimport { mergeClasses } from './shared/src/utils.js';\n\nconst Icon = forwardRef(\n  ({\n    color = \"currentColor\",\n    size = 24,\n    strokeWidth = 2,\n    absoluteStrokeWidth,\n    className = \"\",\n    children,\n    iconNode,\n    ...rest\n  }, ref) => {\n    return createElement(\n      \"svg\",\n      {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: mergeClasses(\"lucide\", className),\n        ...rest\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n        ...Array.isArray(children) ? children : [children]\n      ]\n    );\n  }\n);\n\nexport { Icon as default };\n//# sourceMappingURL=Icon.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport { mergeClasses, toKebabCase } from './shared/src/utils.js';\nimport Icon from './Icon.js';\n\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ className, ...props }, ref) => createElement(Icon, {\n      ref,\n      iconNode,\n      className: mergeClasses(`lucide-${toKebabCase(iconName)}`, className),\n      ...props\n    })\n  );\n  Component.displayName = `${iconName}`;\n  return Component;\n};\n\nexport { createLucideIcon as default };\n//# sourceMappingURL=createLucideIcon.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ArrowRight = createLucideIcon(\"ArrowRight\", [\n  [\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }],\n  [\"path\", { d: \"m12 5 7 7-7 7\", key: \"xquz4c\" }]\n]);\n\nexport { ArrowRight as default };\n//# sourceMappingURL=arrow-right.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ChartLine = createLucideIcon(\"ChartLine\", [\n  [\"path\", { d: \"M3 3v16a2 2 0 0 0 2 2h16\", key: \"c24i48\" }],\n  [\"path\", { d: \"m19 9-5 5-4-4-3 3\", key: \"2osh9i\" }]\n]);\n\nexport { ChartLine as default };\n//# sourceMappingURL=chart-line.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst CircleCheckBig = createLucideIcon(\"CircleCheckBig\", [\n  [\"path\", { d: \"M21.801 10A10 10 0 1 1 17 3.335\", key: \"yps3ct\" }],\n  [\"path\", { d: \"m9 11 3 3L22 4\", key: \"1pflzl\" }]\n]);\n\nexport { CircleCheckBig as default };\n//# sourceMappingURL=circle-check-big.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Code = createLucideIcon(\"Code\", [\n  [\"polyline\", { points: \"16 18 22 12 16 6\", key: \"z7tu5w\" }],\n  [\"polyline\", { points: \"8 6 2 12 8 18\", key: \"1eg1df\" }]\n]);\n\nexport { Code as default };\n//# sourceMappingURL=code.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Linkedin = createLucideIcon(\"Linkedin\", [\n  [\n    \"path\",\n    {\n      d: \"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z\",\n      key: \"c2jq9f\"\n    }\n  ],\n  [\"rect\", { width: \"4\", height: \"12\", x: \"2\", y: \"9\", key: \"mk3on5\" }],\n  [\"circle\", { cx: \"4\", cy: \"4\", r: \"2\", key: \"bt5ra8\" }]\n]);\n\nexport { Linkedin as default };\n//# sourceMappingURL=linkedin.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst LoaderCircle = createLucideIcon(\"LoaderCircle\", [\n  [\"path\", { d: \"M21 12a9 9 0 1 1-6.219-8.56\", key: \"13zald\" }]\n]);\n\nexport { LoaderCircle as default };\n//# sourceMappingURL=loader-circle.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Mail = createLucideIcon(\"Mail\", [\n  [\"rect\", { width: \"20\", height: \"16\", x: \"2\", y: \"4\", rx: \"2\", key: \"18n3k1\" }],\n  [\"path\", { d: \"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\", key: \"1ocrg3\" }]\n]);\n\nexport { Mail as default };\n//# sourceMappingURL=mail.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Megaphone = createLucideIcon(\"Megaphone\", [\n  [\"path\", { d: \"m3 11 18-5v12L3 14v-3z\", key: \"n962bs\" }],\n  [\"path\", { d: \"M11.6 16.8a3 3 0 1 1-5.8-1.6\", key: \"1yl0tm\" }]\n]);\n\nexport { Megaphone as default };\n//# sourceMappingURL=megaphone.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Menu = createLucideIcon(\"Menu\", [\n  [\"line\", { x1: \"4\", x2: \"20\", y1: \"12\", y2: \"12\", key: \"1e0a9i\" }],\n  [\"line\", { x1: \"4\", x2: \"20\", y1: \"6\", y2: \"6\", key: \"1owob3\" }],\n  [\"line\", { x1: \"4\", x2: \"20\", y1: \"18\", y2: \"18\", key: \"yk5zj1\" }]\n]);\n\nexport { Menu as default };\n//# sourceMappingURL=menu.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst MessageSquare = createLucideIcon(\"MessageSquare\", [\n  [\"path\", { d: \"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\", key: \"1lielz\" }]\n]);\n\nexport { MessageSquare as default };\n//# sourceMappingURL=message-square.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Palette = createLucideIcon(\"Palette\", [\n  [\"circle\", { cx: \"13.5\", cy: \"6.5\", r: \".5\", fill: \"currentColor\", key: \"1okk4w\" }],\n  [\"circle\", { cx: \"17.5\", cy: \"10.5\", r: \".5\", fill: \"currentColor\", key: \"f64h9f\" }],\n  [\"circle\", { cx: \"8.5\", cy: \"7.5\", r: \".5\", fill: \"currentColor\", key: \"fotxhn\" }],\n  [\"circle\", { cx: \"6.5\", cy: \"12.5\", r: \".5\", fill: \"currentColor\", key: \"qy21gx\" }],\n  [\n    \"path\",\n    {\n      d: \"M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10c.926 0 1.648-.746 1.648-1.688 0-.437-.18-.835-.437-1.125-.29-.289-.438-.652-.438-1.125a1.64 1.64 0 0 1 1.668-1.668h1.996c3.051 0 5.555-2.503 5.555-5.554C21.965 6.012 17.461 2 12 2z\",\n      key: \"12rzf8\"\n    }\n  ]\n]);\n\nexport { Palette as default };\n//# sourceMappingURL=palette.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Phone = createLucideIcon(\"Phone\", [\n  [\n    \"path\",\n    {\n      d: \"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\",\n      key: \"foiqr5\"\n    }\n  ]\n]);\n\nexport { Phone as default };\n//# sourceMappingURL=phone.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Twitter = createLucideIcon(\"Twitter\", [\n  [\n    \"path\",\n    {\n      d: \"M22 4s-.7 2.1-2 3.4c1.6 10-9.4 17.3-18 11.6 2.2.1 4.4-.6 6-2C3 15.5.5 9.6 3 5c2.2 2.6 5.6 4.1 9 4-.9-4.2 4-6.6 7-3.8 1.1 0 3-1.2 3-1.2z\",\n      key: \"pff0z6\"\n    }\n  ]\n]);\n\nexport { Twitter as default };\n//# sourceMappingURL=twitter.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Video = createLucideIcon(\"Video\", [\n  [\n    \"path\",\n    {\n      d: \"m16 13 5.223 3.482a.5.5 0 0 0 .777-.416V7.87a.5.5 0 0 0-.752-.432L16 10.5\",\n      key: \"ftymec\"\n    }\n  ],\n  [\"rect\", { x: \"2\", y: \"6\", width: \"14\", height: \"12\", rx: \"2\", key: \"158x01\" }]\n]);\n\nexport { Video as default };\n//# sourceMappingURL=video.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst X = createLucideIcon(\"X\", [\n  [\"path\", { d: \"M18 6 6 18\", key: \"1bl5f8\" }],\n  [\"path\", { d: \"m6 6 12 12\", key: \"d8bk6v\" }]\n]);\n\nexport { X as default };\n//# sourceMappingURL=x.js.map\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && (safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove());\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.18.2\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.18.2\", `Attempting to mix Motion versions ${nextValue.version} with 11.18.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["mergeClasses","classes","filter","className","index","array","Boolean","trim","indexOf","join","defaultAttributes","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Icon","forwardRef","color","size","absoluteStrokeWidth","children","iconNode","rest","ref","createElement","Number","map","tag","attrs","Array","isArray","createLucideIcon","iconName","Component","props","string","replace","toLowerCase","displayName","ArrowRight","d","key","ChartLine","CircleCheckBig","Code","points","Linkedin","x","y","cx","cy","r","LoaderCircle","rx","Megaphone","Menu","x1","x2","y1","y2","MessageSquare","Palette","Twitter","Video","X","f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","__self","__source","q","c","a","g","b","e","h","call","defaultProps","$$typeof","type","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","LayoutGroupContext","createContext","useConstant","init","useRef","PresenceContext","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","PopChildMeasure","React.Component","getSnapshotBeforeUpdate","prevProps","element","this","childRef","isPresent","sizeRef","offsetHeight","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","PopChild","id","useId","nonce","useContext","useInsertionEffect","dataset","motionPopId","style","document","head","appendChild","sheet","insertRule","removeChild","React.cloneElement","cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","memoizedOnExitComplete","useCallback","childId","set","isComplete","values","context","useMemo","register","delete","Math","random","forEach","_","React.useEffect","Provider","value","Map","usePresence","subscribe","useEffect","safeToRemove","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","AnimatePresence","propagate","isParentPresent","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","i","length","includes","get","exitingChildren","nextChildren","splice","forceRender","Fragment","has","isEveryExitComplete","isExitComplete","noop","any","invariant","memo","callback","result","progress","from","to","toFromDifference","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","step","schedule","keepAlive","immediate","queue","add","cancel","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","postRender","processBatch","performance","now","max","min","frame","cancelFrame","frameSteps","requestAnimationFrame","LazyContext","strict","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","some","name","validMotionProps","isValidMotionProp","startsWith","shouldForward","isValidProp","require","default","_a","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","args","_target","MotionContext","isVariantLabel","v","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","isVariantNode","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","motionComponentSymbol","isRefObject","useMotionRef","visualState","visualElement","externalRef","instance","onMount","mount","unmount","camelToDash","str","optimizedAppearDataAttribute","microtask","queueMicrotask","SwitchLayoutGroupContext","useVisualElement","createVisualElement","ProjectionNodeConstructor","_b","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","initialLayoutGroupConfig","projection","initialPromotionConfig","layoutId","dragConstraints","layoutScroll","layoutRoot","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","createProjectionNode","isMounted","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","updateFeatures","animationState","animateChanges","MotionHandoffMarkAsComplete","options","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","reactExports","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","features","loadFeatures","ForwardRefMotionComponent","layoutGroupId","lowercaseSVGElements","isSVGComponent","test","getValueState","getVelocity","resolveVariantFromProps","definition","velocity","isKeyframesTarget","isMotionValue","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","scrapeMotionValuesFromProps","createRenderState","onUpdate","makeLatestValues","renderState","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","resolved","transitionEnd","transition","target","valueTarget","transformPropOrder","transformProps","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","getValueAsType","transform","clamp","number","parse","parseFloat","alpha","scale","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","round","numberValueTypes","zIndex","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","offset","camelKeys","calcOrigin","origin","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createHtmlRenderState","createSvgRenderState","renderHTML","styleProp","assign","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","scaleCorrectors","isForcedMotionValue","newValues","getValue","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","layoutProps","svgMotionConfig","needsMeasure","getBBox","getBoundingClientRect","updateSVGDimensions","tagName","htmlMotionConfig","copyRawValuesOnly","source","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","createMotionComponentFactory","shallowCompare","next","prev","prevLength","resolveVariant","getProps","supportsScrollTimeline","ScrollTimeline","BaseGroupPlaybackControls","constructor","animations","stop","runAll","finished","Promise","all","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","subscriptions","time","speed","startTime","duration","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","getValueTransition","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","isGenerator","onfinish","isBezierDefinition","easing","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","generateLinearEasing","resolution","numPoints","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","isDragging","isDragActive","setupGesture","elementOrSelector","elements","Element","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","filterEvents","event","pointerType","isNodeOrChild","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","isElementKeyboardAccessible","getAttribute","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","positionalKeys","clearTime","newTime","addUniqueItem","arr","item","removeItem","SubscriptionManager","handler","notify","numSubscriptions","getSize","velocityPerSecond","frameDuration","MotionValue","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","addValue","addValueToWillChange","willChange","getOptimisedAppearId","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","sanitize","floatRegex","singleColorRegex","isColorString","testProp","isNullish","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","parseInt","hsla","hue","saturation","lightness","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","isNotNull","getFinalKeyframe","keyframes","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","mixNumber","hueToRgb","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","transformers","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","visualDuration","restSpeed","restDelta","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","supports","HTMLElement","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","getState","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","Feature","node","updateAnimationControlsSubscription","unmountControls","prevAnimate","arguments","prevIsPresent","prevPresenceContext","exitAnimation","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","globalTapTarget","onFocus","isFocusVisible","matches","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","motion"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266]}