{"version":3,"mappings":";mlCAUMA,EAAgBC,OAAK,IAAAC,EAAA,IAAM,OAAO,oCAAe,4BAAE,KAAaC,IAAA,CACpE,QAAS,CAAC,CAAE,SAAAC,EAAU,GAAGC,KAAgC,CACjD,MAAE,OAAAC,EAAQ,gBAAAC,CAAoB,EAAAJ,EAElC,OAAAK,EAAA,IAACD,EAAgB,MAAK,OACpB,SAAAC,MAACF,EAAO,IAAP,CAAY,GAAGD,EACb,SAAAD,CACH,EACF,EAEJ,CACF,EAAE,CAAC,EAMGK,EAAe,CACnB,QAAS,CACP,QAAS,EACT,EAAG,EACL,EACA,MAAO,CACL,QAAS,EACT,EAAG,EACH,WAAY,CACV,SAAU,GACV,KAAM,SACR,CACF,EACA,KAAM,CACJ,QAAS,EACT,EAAG,IACH,WAAY,CACV,SAAU,GACV,KAAM,QACR,CACF,CACF,EAEgB,SAAAC,EAAgB,CAAE,SAAAN,GAAkC,CAClE,MAAMO,EAAWC,IAEjB,OACGJ,EAAA,IAAAK,EAAA,UAAS,SAAUL,EAAA,IAACM,IAAQ,EAC3B,SAAAN,EAAA,IAACR,EAAA,CAEC,QAAQ,UACR,QAAQ,QACR,KAAK,OACL,SAAUS,EACV,UAAU,eAET,SAAAL,CAAA,EAPIO,EAAS,QASlB,GAEJ","names":["MotionWrapper","lazy","__vitePreload","mod","children","props","motion","AnimatePresence","jsx","pageVariants","RouteTransition","location","useLocation","Suspense","Loading"],"ignoreList":[],"sources":["../../../src/components/ui/route-transition.tsx"],"sourcesContent":["import { lazy, Suspense } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Loading } from \"./loading\";\n\ninterface MotionWrapperProps {\n  children: React.ReactNode;\n  [key: string]: any;\n}\n\n// Lazy load Framer Motion components\nconst MotionWrapper = lazy(() => import('framer-motion').then(mod => ({\n  default: ({ children, ...props }: MotionWrapperProps) => {\n    const { motion, AnimatePresence } = mod;\n    return (\n      <AnimatePresence mode=\"wait\">\n        <motion.div {...props}>\n          {children}\n        </motion.div>\n      </AnimatePresence>\n    );\n  }\n})));\n\ninterface RouteTransitionProps {\n  children: React.ReactNode;\n}\n\nconst pageVariants = {\n  initial: {\n    opacity: 0,\n    y: 20,\n  },\n  enter: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      duration: 0.4,\n      ease: \"easeOut\",\n    },\n  },\n  exit: {\n    opacity: 0,\n    y: -20,\n    transition: {\n      duration: 0.3,\n      ease: \"easeIn\",\n    },\n  },\n};\n\nexport function RouteTransition({ children }: RouteTransitionProps) {\n  const location = useLocation();\n\n  return (\n    <Suspense fallback={<Loading />}>\n      <MotionWrapper\n        key={location.pathname}\n        initial=\"initial\"\n        animate=\"enter\"\n        exit=\"exit\"\n        variants={pageVariants}\n        className=\"min-h-screen\"\n      >\n        {children}\n      </MotionWrapper>\n    </Suspense>\n  );\n} "],"file":"assets/js/ui-route-transition-83r5_O6z.js"}